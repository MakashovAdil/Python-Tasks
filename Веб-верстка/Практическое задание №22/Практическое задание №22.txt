1 Объясните своими словами с примером что такое трансформация?
Ответ: C помощью Трансформации можно сдвигать, поворачивать и масштабировать элементы. Трансформации преобразовывают элемент, не затрагивая 
остальные элементы веб-страницы. Трансформации задаются css-свойством transform.
Можно производить следующие трансформации:
• scale - увеличивает или уменьшает элемент
• translate - двигает элемент в разных направлениях.
• rotate - поворачивает элемент на разные углы.
• skew - скашивает элемент по осям.
Пример: 
.button:hover{
  transform: matrix(1.0, 2.0, 3.0, 4.0, 5.0, 6.0);
  transform: rotate(45deg);
  transform: translate(12px, 50%);
  transform: translateX(2em);
  transform: translateY(3in);
 -webkit-transform: scale(0.7);
 -moz-transform: scale(0.7);
 -o-transform: scale(0.7);
 -ms-transform: scale(0.7);
  transform: scale(0.7);
}

2 Также опишите анимацию.
Ответ: С помощью Анимации сайтам можно добавить динамичности. Она оживляет веб-страницы, улучшая взаимодействие с пользователем.
Есть следующие Анимации:
• animation-name (название анимации) - определяет список применяемых к элементу анимаций.
• animation-duration (продолжительность анимации) - определяет продолжительность одного цикла анимации.
• animation-timing-function (временная функция) - описывает, как будет развиваться анимация между каждой парой ключевых кадров.
• animation-iteration-count (повтор анимации) - указывает, сколько раз проигрывается цикл анимации.
• animation-direction (направление анимации) - определяет, должна ли анимация воспроизводиться в обратном порядке в некоторых или во всех циклах.
• animation-play-state (проигрывание анимации) - определяет, будет ли анимация запущена или приостановлена.
• animation-delay (задержка анимации) - определяет, когда анимация начнется.
• animation-fill-mode (состояние элемента до и после воспроизведения анимации) - определяет, какие значения применяются анимацией вне времени 
ее выполнения. 

Пример: div {animation: shadow 1s ease-in-out 0.5s alternate, move 5s linear 2s;}

